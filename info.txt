#3.0
- setup
git init
git remote add origin git@github.com:hmchung2/instaclone-backend.git
npm init -y

#3.1
- Apollo Server

-- install apollo
npm install apollo-server graphql

-- install nodemon to let server restart immediately
npm i nodemon --save-dev

#3.2- 3.3
- Babel

-- to import outside a module, put following in the package.json
 "type" : "module"

-- install babel instead if you want to use import and work on any nodemon
npm i --save-dev @babel/core
npm install @babel/preset-env --save-dev
touch babel.config.json
{
    "presets" : ["@babel/preset-env"]
}
npm install @babel/node --save-dev
"dev": "nodemon --exec babel-node server"

-- babel is js compiler. 

#3.4
- Prisma
-- Write graphQL and prima will create database reading my configuration

-- install Prisma
 npm install prisma -D

-- start
npx prisma init


--postgresql setup


sudo systemctl enable postgresql
sudo systemctl start postgresql
sudo passwd postgres
su - postgres

    createuser pgadmin
    psql
        ALTER USER pgadmin WITH ENCRYPTED password 'secure_password';
        CREATE DATABASE instaclone OWNER pgadmin;
        GRANT ALL PRIVILEGES ON DATABASE instaclone to pgadmin;
        \q
    exit
sudo uft allow http
sudo ufw allow http
sudo ufw allow https


start pgadmin4
    register server
        connections : host ip (localhost), Maintanance db -> instaclone , password -> 'secure_password'
        create


-- .env
configure as following
DATABASE_URL="postgresql://pgadmin:randompassword@localhost:5432/instaclone?schema=public"

#3.5
- Prisma Migrate

-- install extension prisma

-- Example prisma module
model Movie {
  id        Int      @id @default(autoincrement())
  title     String
  year      Int
  genre     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

-- allow user to create db
sudo -u postgres psql postgres
ALTER USER pgadmin CREATEDB;

-- prisma migrate command
npx prisma migrate dev --name init

--- "dev" generates prisma client

#3.6 - 3.7
- Prisma Client

-- create client
const client = new PrismaClient();

-- use client in resolvers
movies: () => client.movie.findMany(),

#3.8
- prisma studio
npx prisma studio

-- web version of database studio

-- can edit db from web

#3.9 - 3.10
- Architecture

-- graphqltool bring all together

-- install graphqltool
npm install @graphql-tools/schema @graphql-tools/load-files @graphql-tools/merge

loadFilesSync
mergeTypeDefs
mergeResolvers
makeExecutableSchema


#3.9
- Dotenv
--read variables from virtual env
npm i dotenv

-- add import dotenv at top in application

-- now you can chage ports in .env file